/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo76.Vistas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mariadb.jdbc.Statement;
import universidadgrupo76.AccesoADatos.AlumnoData;
import universidadgrupo76.AccesoADatos.Conexion;
import universidadgrupo76.AccesoADatos.InscripcionData;
import universidadgrupo76.AccesoADatos.MateriaData;
import universidadgrupo76.entidades.Alumno;
import universidadgrupo76.entidades.Inscripcion;
import universidadgrupo76.entidades.Materia;

/**
 *
 * @author Mati_ssd
 */
public class JFFFormularioDeInscripcion extends javax.swing.JInternalFrame {

    AlumnoData ad = new AlumnoData();
    MateriaData md = new MateriaData();
    InscripcionData id = new InscripcionData();
    int idTabla = 0;
     int idSeleccionado=0;
     int valor = 0;
    private DefaultTableModel modelo = new DefaultTableModel(){public boolean isCellEditable(int fila, int columna){
         
        
         return false;
     }
     };;

    /**
     * Creates new form JFFFormularioDeInscripcion
     */
    public JFFFormularioDeInscripcion() {
        initComponents();
        CargarComboBox();
        armarCabecera();
        MostrarLaTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jcbalumnos = new javax.swing.JComboBox<>();
        rbmateriasnoinscriptas = new javax.swing.JRadioButton();
        rbmateriasinscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Formulario de Incripcion");

        jSeparator1.setForeground(new java.awt.Color(129, 233, 192));

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        jLabel2.setText("Seleccione un Alumno :");

        jcbalumnos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbalumnosItemStateChanged(evt);
            }
        });
        jcbalumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbalumnosMouseClicked(evt);
            }
        });
        jcbalumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbalumnosActionPerformed(evt);
            }
        });

        rbmateriasnoinscriptas.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        rbmateriasnoinscriptas.setText("Materias no Inscriptas");
        rbmateriasnoinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbmateriasnoinscriptasActionPerformed(evt);
            }
        });

        rbmateriasinscriptas.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        rbmateriasinscriptas.setText("Materias Inscriptas");
        rbmateriasinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbmateriasinscriptasActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jbInscribir.setBackground(new java.awt.Color(129, 233, 192));
        jbInscribir.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setBackground(new java.awt.Color(129, 233, 192));
        jbAnular.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jbAnular.setText("Anular Inscripcion");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(247, 166, 166));
        jButton3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jcbalumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(rbmateriasinscriptas)
                        .addGap(54, 54, 54)
                        .addComponent(rbmateriasnoinscriptas)
                        .addGap(0, 66, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addComponent(jbAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(196, 196, 196))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbalumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbmateriasnoinscriptas)
                    .addComponent(rbmateriasinscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbalumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbalumnosActionPerformed
        // TODO add your handling code here
        // TODO add your handling code here

        Alumno alumnoSeleccionado = (Alumno) jcbalumnos.getSelectedItem();
        idTabla = alumnoSeleccionado.getIdAlumno();
        MostrarLaTabla();
    }//GEN-LAST:event_jcbalumnosActionPerformed


    private void rbmateriasnoinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbmateriasnoinscriptasActionPerformed
        // TODO add your handling code here:
        if (rbmateriasnoinscriptas.isEnabled()) {
            rbmateriasinscriptas.setSelected(false);
            MostrarLaTabla();
        }

    }//GEN-LAST:event_rbmateriasnoinscriptasActionPerformed

    private void rbmateriasinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbmateriasinscriptasActionPerformed
        // TODO add your handling code here:
     
        if (rbmateriasinscriptas.isEnabled()) {
            rbmateriasnoinscriptas.setSelected(false);
            MostrarLaTabla();
     
            
        }
        
    }//GEN-LAST:event_rbmateriasinscriptasActionPerformed

    private void jcbalumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbalumnosMouseClicked
        // TODO add your handling code he

    }//GEN-LAST:event_jcbalumnosMouseClicked

    private void jcbalumnosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbalumnosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbalumnosItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int filaSeleccionada=jTable1.getSelectedRow();
        if (filaSeleccionada!=-1) {
            idSeleccionado=(Integer)jTable1.getValueAt(filaSeleccionada, 0);
            String apellidoSeleccionado=(String)jTable1.getValueAt(filaSeleccionada, 1);
            int añoSeleccionado=(Integer)jTable1.getValueAt(filaSeleccionada, 2);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here
        if (idSeleccionado>0) {
            
        
        if (rbmateriasnoinscriptas.isSelected()){
            String userInput = JOptionPane.showInputDialog("Por favor, ingrese un nota:");

        try {
             valor = Integer.parseInt(userInput);
          String sql = "INSERT INTO inscripcion(idAlumno,idMateria,nota) VALUES(?,?,?)";
        try (Connection conn = Conexion.getConexion(); PreparedStatement ps = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);) {
            ps.setInt(1, idTabla);
            ps.setInt(2, idSeleccionado);
            ps.setDouble(3, valor);
            ps.executeUpdate();

            ResultSet rs = ps.getGeneratedKeys();
            if (rs.next()) {

                JOptionPane.showMessageDialog(null, "se inseto exitosamente");
            }
            ps.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR al acceder a la tabla ionscripcion");
        }

        } catch (NumberFormatException e) {
            // Maneja aquí la situación en la que el usuario no ingresó un número válido.
            JOptionPane.showMessageDialog(null, "Ingrese un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
        }else{
        JOptionPane.showMessageDialog(null,"marque la materia a inscribirse");
        }    
         
        
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        if (rbmateriasinscriptas.isSelected()){
            if (idSeleccionado>0) {
        id.eliminadoFisicoDeNota(idTabla, idSeleccionado);
      
        }else{
                JOptionPane.showMessageDialog(null,"Marque la materia a eliminar");

        }
    }//GEN-LAST:event_jbAnularActionPerformed
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JComboBox<Alumno> jcbalumnos;
    private javax.swing.JRadioButton rbmateriasinscriptas;
    private javax.swing.JRadioButton rbmateriasnoinscriptas;
    // End of variables declaration//GEN-END:variables

    private void CargarComboBox() {
        for (Alumno alumno : ad.listarAlumnos()) {
            jcbalumnos.addItem(alumno);
        }
        rbmateriasinscriptas.setSelected(true);
    }

    private void armarCabecera() {
        modelo.addColumn("Id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        jTable1.setModel(modelo);
    }

    private void tablaConMateriaNoInscripta() {
        modelo.setRowCount(0);
        for (Materia inscripciones : id.obtenerMAteriasNoCursadas(idTabla)) {
            modelo.addRow(new Object[]{inscripciones.getIdMateria(), inscripciones.getNombre(), inscripciones.getAno()});
        }

    }

    private void tablaConMateriaInscripta() {
        modelo.setRowCount(0);
        for (Materia inscripciones : id.obtenerMateriasCursadas(idTabla)) {
            modelo.addRow(new Object[]{inscripciones.getIdMateria(), inscripciones.getNombre(), inscripciones.getAno()});
        }

    }

    private void MostrarLaTabla() {
        if (rbmateriasinscriptas.isSelected()) {
            tablaConMateriaInscripta();
        } else {

            tablaConMateriaNoInscripta();
        }

    }
 
}
